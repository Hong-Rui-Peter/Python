# -*- coding: utf-8 -*-
"""類神經網路_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZN9FVNUt9AVbY9uT9K9NGU4cc9kIQLHW
"""

from keras.datasets import mnist
#(Mixed National Institue of Standards and Technology)

(X_train, Y_train), (X_test, Y_test) = mnist.load_data()
print(X_train[0])
print(Y_train[0])
#3分鐘練習, 8:31

X_train.shape
import matplotlib.pyplot as plt
plt.imshow(X_train[0], cmap='Greys')
print(Y_train[0])
#3分鐘練習
#第二節課休息, 8:48 繼續

#CNN
from tensorflow.keras.utils import to_categorical
X_train = X_train.reshape(60000, 784)/255
X_test = X_test.reshape(10000, 784)/255
Y_train = to_categorical(Y_train, 10)
Y_test = to_categorical(Y_test, 10)
#3分鐘練習, 9:03

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
model = Sequential()
model.add(Dense(100, input_dim=784, activation='relu'))
model.add(Dense(100, activation='relu'))
model.add(Dense(100, activation='relu'))
model.add(Dense(10, activation='softmax'))
model.summary()
#3分鐘練習, 9:13

from tensorflow.keras.optimizers import SGD
model.compile(loss='mse', optimizer=SGD(learning_rate=0.087), metrics=['accuracy'])

model.fit(X_train, Y_train, epochs=20, batch_size=100)
#5分鐘, 請大家訓練你的模型, 9:27

X_test[50].shape
inp = X_test[50].reshape(1, 784)
model.predict(inp)

print(Y_test[50])

import numpy as np
y_predict = np.argmax(model.predict(X_test), axis=-1)

n = 3
print('神經網路預測是:', y_predict[n])
plt.imshow(X_test[n].reshape(28,28), cmap='Greys');