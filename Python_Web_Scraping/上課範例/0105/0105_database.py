# -*- coding: utf-8 -*-
"""0105_Database.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LxsHuMzWCtWG63IxOCS0EWxGJ8uRtxSD
"""

# JSON
# CSV (Excel)
# 資料庫: Oracle, SQL Server, DB2; MySQL, SQLite
# 資料庫本體, table

import sqlite3

con = sqlite3.connect('school.db')
#dataset 資料集: 欄位; 列
cur = con.cursor() #請聯想 excel 資料表裡面的一筆資料

#3分鐘練習, 至 6:55

# 資料庫的語言: SQL
# stu: stuid INTEGER PRIMARY KEY, name VARCHAR(20), phone VARCHAR(10)

cur.execute('CREATE TABLE stu (stuid INTEGER PRIMARY KEY, name VARCHAR(20), phone VARCHAR(10))')
#內嵌 SQL 語法;對資料庫建立一個名稱為 stu 的資料表 (table)
#3分鐘練習 , 7:8

cur.execute('DROP TABLE stu')

cur.execute("INSERT INTO stu VALUES({1}}, '章於歌', '0922577885')")
#請新增多筆資料, 然後查詢: 第二節課 7: 48 繼續

cur.execute('SELECT * FROM stu')
rows = cur.fetchall()
print(rows)
print('--------')

for row in rows:
  print(row[0], row[1], row[2])


# 5 分鐘練習, 至7:25

# 向量, 矩陣
# 電腦資料處理
# 資料科學 (Data Science) 學科, 職業
# NumPy -> 向量與矩陣運算; Pandas -> 資料處理; Matplotlib -> 2D 繪圖; Seaborn 豐富的圖形

# Numpy: ndarray
# 向量 (vector); 矩陣 (matrix)
# 向量：方向與大小的值: 速度、加速度、動力
# 向量：序列數值: [2, 5, -9], [], 2i+4j+6k
# 矩陣: 2維度的表格 (欄, 列)

# 陣列
import numpy as np
a = np.array([1, 2, 3, 4, 5]) #用串列建立 ndarray
b = np.array((1, 2, 3, 4, 5)) #用元組建立 ndarray
print(type(a))
print(a)
print(type(b))
print(b)

# 3 分鐘練習, 8:24

# 針對每個元素都給予一個索引值 0, 1, 2, 3, 4
print(a[0], a[1], a[2], a[3], a[4])
a[0] = 888
print(a)
# 3 分鐘練習, 8:29

# 二維陣列
c = np.array([[1, 2, 3], [4, 5, 6]])
print(c)
# c[0,0]=1  c[0, 1] = 2   c[0,2]=3
# c[1,0]=4  C[1,1] = 5    c[1, 2]=6
print(c[1,1])

#第二節課休息至 8:45

e = np.array([1, 2, 3, 4, 5], dtype=float)
print(e)

f = np.arange(8)
print(f)
g = np.arange(1, 6, 3)
print(g)
#3分鐘練習, 53分

g = np.zeros(2)
print(g)
h = np.ones(5)
print(h)
i = np.full(2, 7)
print(i)
j_sample = np.array([[1, 2, 3], [4, 5, 6]])
j = np.ones_like(j_sample)
print(j)
k = np.eye(3)
print(k)
print('-----------')
l = np.eye(3, k=0)
print(l)

#3分鐘練習, 9:07
m = np.random.rand(6)
print(m)
n = np.random.rand(3, 5)
print(n)

a = np.arange(16)
print(a)
print('-----------------------')
b = a.reshape((4, 4))
print(b)
print('----------------------')
c = b.reshape(16)
print(c)
print('------------------------')
d = np.array(range(10), float)
print(d)
e = d.reshape((5, 2))
print(e)
# 3 分鐘練習, 9:19

# numpy -> function()
# 屬性 .attribute
# dtype, size, shape, itemsize, ndim, nbytes

a = np.array([[11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25], [26, 27, 28, 29, 30]])

print(a.dtype)
print(a.shape)
print(a.itemsize)
print(a.ndim)
print(a.nbytes)

#3 分鐘練習, 9:28

# 走訪陣列的元素: 迴圈
a1 = np.array([1, 2, 3, 4, 5])
for ele in a1:
  print(ele)
  print('---')

#走訪2維陣列的元素
for ele in a:
  print(ele)
print('--------------------------')
for ele in a:
  for item in ele:
    print(str(item) + " ", end="")
    #print(item)

# 3分鐘練習, 至9:38