# -*- coding: utf-8 -*-
"""多元線性迴歸_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wttAToMw4DyVXS6hm5t6LeZV_D5QrCet
"""

#根據每天的氣候因數, 決定城市準備共享單車的數量
#https://archive.ics.uci.edu/ml/machine-learning-databases/00560/SeoulBikeData.csv

import pandas as pd
df = pd.read_csv('SeoulBikeData.csv', encoding='gbk', index_col = ['Date'])
df
#3分鐘練習, 8:25

#資料清理 (Data cleaning)
data = df.copy()

data = data[data['Functioning Day'] == 'Yes']

data.pop('Functioning Day') #只能拿掉一次
#3分鐘練習, 第二節客休息, 8:45 繼續

#NaN 空值
data.info()
data = data.dropna()

data = data.rename(columns={'Temperature(癈)':'Temperature(*C)', 'Dew point temperature(癈)':'Dew point(*C)'})
#3分鐘練習, 8:55

#label encoder 將文字資料轉成對應的數字
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

data['Seasons'] = le.fit_transform(data['Seasons'])
data['Holiday'] = le.fit_transform(data['Holiday'])
#3分鐘練習, 9:04

target = data.pop('Rented Bike Count')

from sklearn.model_selection import train_test_split
data_train, data_test, target_train, target_test = train_test_split(data.values, target.values, test_size=0.2)
#3分鐘練習, 9:15

from sklearn.linear_model import LinearRegression
regr = LinearRegression()
regr.fit(data_train, target_train)

pre = regr.predict(data_test)
print(pre.round())
print(target_test)
#3分鐘練習, 9:25

#1.決定係數
print(regr.score(data_train, target_train).round(3))
print(regr.score(data_test, target_test).round(3))
#>0.7

#殘差圖
import numpy as np
import matplotlib.pyplot as plt
x=np.arange(pre.size)
y = x*0
plt.scatter(x, pre-target_test)
plt.plot(x, y, color='orange')
plt.show()
#5分鐘練習, 9:35