# -*- coding: utf-8 -*-
"""0114_機率與統計.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uy4Z4KRC8G9inpz-FB1dRl4CaJ8pDM9p
"""

#機率統計
#組合事件 (Compound Events): 交集, 聯集
# 事件 A, 事件 B: 交集: 同時發生 A 交集 B。例如丟兩個骰子, 丟3次, 骰子A: 1,2,3, 骰子B丟出3, 4, 5 -> 3
# 聯集: 1, 2, 3, 4, 5

#條件機率 (Conditional Probability)
# 一個事件已經發生, 在此事件上發生另外一個事件的機率: 事件A, 事件B,  P(A|B)
# P(A|B)= P(A交集B)/P(B) -> ChatGPT

#加法定理
P(A聯集B) = P(A) + P(B) - P(A交集B)
#乘法定理
P(A交集B) = P(A) * P(B|A)

#統計
#樣本 (sample), 母體 (population, 例如:所有糖尿病病人)
#資料的描述 -> 描述(敘述)統計 (descriptive statistics)
# 推論統計 (inferential statistics) -> 檢定統計 (差異, 相關)

#資料的數: 描述統計
# 集中程度:
#1. 眾數 (Model): 你資料中, 出現次數最多的資料
import pandas as pd
s = pd.Series([30,1,5,10,30,50,30,15,40,45,30, 1, 1, 1, 1, 1, 1])
s2 = pd.Series([1, 2, 3, 2, 1, 2, 3, 3, 3, 3, 2, 2, 1])
print(s.mode())
#請大家練習,眾數

#2. 中位數 (Median):你的資料排序之後, 取出中間位置的值
print(s.median())

#3. 四分位數 (Quartiles)
#25%, 50%, 75%
print(s.quantile(q=0.25))
print(s.quantile(q=0.75))
#請練習

#4.平均數 (Mean): 算術平均數: 所有資料加總除個數 *
print(s.mean())

#資料分散的程度 : 離散量
#5.全距 (Range)
#6. 四分位差 (interquartile range)
#7. 變異數 (variance) * 每個值減去平均數的總和
print(s.var())
print(s2.var())
#請練習變異數計算
#8. 標準差 (SD, Standard Deviation): 變異數的平方根
print(s.std())
print(s2.std())

#第一節課休息: 7: 40 繼續
#實際案例練習描述統計: 此為今天的練習作業, 請繳交到網址
#https://drive.google.com/drive/folders/1s9Dbi_swf439G420R0FRXILlqaGWR7CK?usp=drive_link
df = pd.read_csv('titanic.csv')
df.head(3) #印出前三筆資料

#印出年齡 (Age) 1.眾數; 2. 中位數; 3. 25%四分位數; 4. 平均數; 5. 變異數; 6. 標準差
print('1. 眾數: ', df['Age'].mode())
print('2. 中位數: ', df['Age'].median())
print('3. 25%四分位數: ', df['Age'].quantile(q=0.25))
print('4. 平均數: ', df['Age'].mean())
print('5. 變異數: ', df['Age'].var())
print('6. 標準差: ', df['Age'].std())
#10分鐘時間實作作業, 至 8:05
#今天的作業 1
#3分鐘,請大家確認結果, 8:16

#進階的資料呈現, 作業擴充部分, 可選擇
df.info()

print(df['Survived'].value_counts())
print(df['Survived'].value_counts(normalize=True)) #常態分配
#3分鐘練習, 至8:29

#個數,百分比資料報表
pd.concat([df['Survived'].value_counts(), df['Survived'].value_counts(normalize=True)], axis=1, keys=['個數','百分比'])
#3分鐘練習, 至8:36
#第二節課休息10分鐘, 8:47 繼續
#個數+表分比
#平均值+標準差

#刪除不需要的欄位
df = df.drop(['PassengerId', 'Name', 'Ticket', 'Cabin'], axis=1)
#3分鐘練習, 8:55

df.head(3)

#遺漏值 (缺失) 的檢查
df.isnull().sum()

#分析甚麼因素導致死亡
#印出欄位之間的配對圖 (pairplot)
import matplotlib.pyplot as plt
import seaborn as sns
sns.pairplot(data=df, hue='Survived', height=2)
#3分鐘練習配對圖, 至9:11

#社會經濟分類 (Demography): 收入, 性別, 年齡
#性別跟船難存活的關係如何?
df.groupby('Sex')['Survived'].value_counts().unstack(1).plot(kind='bar', figsize=(5, 3))
#練習3分鐘, 9:20

#年齡跟船難存活的關係如何?
df.groupby('Survived')['Age'].plot(kind='hist', legend=True)

#下一步:將資料轉換到專門的統計分析工具,  SPSS, SAS, 或是 Python 統計套件等分析
#資料的預先處理
X_col_num = ['Age', 'SibSp', 'Parch', 'Fare'] #屬於數值型的欄位
X_col_cat = ['Pclass', 'Sex', 'Embarked'] #屬於名稱分類型的欄位
X_cols = X_col_num + X_col_cat
y_col = 'Survived'

#資料的管道建立 - pipeline
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline
num_pl = make_pipeline(SimpleImputer(strategy='median'), StandardScaler())
print(f'數值型資料的欄位有:{X_col_num}')
num_pl.fit_transform(df[X_col_num])[:3]