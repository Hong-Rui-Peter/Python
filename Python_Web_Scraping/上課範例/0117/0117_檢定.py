# -*- coding: utf-8 -*-
"""0117_檢定.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i6v8PZPHpxWnDbBbUJPogRJl21ZSqONF
"""

#估計與檢定
#統計：1. 描述統計; 2.檢定
#Python 資料分析
# 估計 (Estimation): 樣本 (smaple), 台灣抽菸人口百分比? 母體 (population) -> 抽樣 1000. (平均數)
# 假設檢定 (Hypothesis Testing): *黃色小熊會被12歲的小朋友喜愛
#----------------
#母數 (parameters): 母體特徵的平均數和標準差這些指標
#σ(sigma): 母體的標準差 μ(mu):母體的平均數, *樣本的標準差 S,平均數 X (bar)
#母體資料分配型態: 常態分配 (Normal Distribution)

#抽樣: 樣本資料 (sampling data)
#1. 簡單隨機抽樣: Python 串列, 500 抽1 (隨機或是一定與比率抽)
#2. 系統抽樣: 先隨機選取, 後以母體大小除以樣本大小的間距進行抽樣。例如:第1次抽到11, 母體10000: 200 樣本, 10000/200=50, 所以第二個樣本 61, 第三個111
#3. 分層抽樣 (stratified sampling): strata 層
#4. 叢集抽樣:地區別或是組織別

#資料標準化: 使用【標準分數】(standard score) - Z (Z-score) (data science, 資料科學家)
#練習：在 Facebook 隨機選 24 個朋友樣本, 記下每個朋友的朋友數
import pandas as pd
friends = [110, 1017, 1127, 417, 624, 957, 89,
           951, 947, 797, 981, 125, 455, 731,
           1641, 486, 1307, 472, 1131, 1771, 905,
           532, 742, 633]
s_friends = pd.Series(friends)
print(s_friends.describe())
#5分鐘,請完成。7:25

#用 Z 表達朋友數
m = s_friends.mean()
print('平均數: ', m)
s = s_friends.std()
print('標準差: ', s)

z_score = []
for x in friends:
  z = (x - m)/s
  z_score.append(z)

print(z_score)
#3分鐘練習, 7:35

#中央極限定理: 抽樣數夠大, 都幾乎會是常態分配
# 休息10分鐘, 7:45開始
import matplotlib.pyplot as plt
import numpy as np
dice = [1, 2, 3, 4, 5, 6]
sample_means = []
for x in range(100):
  sample = np.random.choice(a=dice, size=1)
  sample_means.append(sample.mean())

df = pd.DataFrame(sample_means)
df.plot(kind='density')
plt.show()
#練習5分鐘, 8:03

#估計
#點估計 (point estimation): 民調調查結果,所有的選民有 45% 投給 2 號候選人
#區間估計 (interval estimate):全國 30%-48% 會投給 1 號候選人
#甚麼是好的估計: 1. 不偏差 (bias); 2. 有效; 3. 一致性

population = []
for x in range(10000):
  sample = np.random.choice(a=dice, size=100)
  population.append(sample.mean())
print('母體的平均數: ', sum(population)/10000)

size_range = [10, 100, 1000]
for sample_size in size_range:
  sample = np.random.choice(a=population, size=sample_size)
  sample_mean = sample.mean()
  print(sample_size, '樣本平均數', sample_mean)

#5分鐘練習, 8:20

#區間估計: 例如：國內男性身高 95% 機率是在 161-179 公分之間
#95% 機率: 信賴係數 (confidence coefficent), 信賴水準
# 161-179 公分: 信賴區間 (confidence intervals)
# 95% 會準確, 顯著水準, 99%

# 進行區間估計的步驟: 1. 決定信賴係數; 2. 查詢 Z  分配表; 3.獲得信賴區間值

population = []
for x in range(10000):
  sample = np.random.choice(a=dice, size=100)
  population.append(sample.mean())
print('母體平均數: ', sum(population)/10000)

#第二節課休息, 8:40 繼續

import math
sample_size = 100
sample = np.random.choice(a=population, size=sample_size)
sample_mean = sample.mean()
print('樣本平均:', sample_mean)
sample_stdev = sample.std()
print('樣本標準差:', sample_stdev)
sigma = sample_stdev/math.sqrt(sample_size-1)
print('樣本計算出的母體標準差:', sigma)
#5分鐘練習, 8:52

#範例問題 1 (自由練習)：學校有一些交換學生, 有人認為交換生成績比較好, 有人不認為。怎麼證明?
# 交換學樣本 100 個學生, 成績平均是 71.5 分; 從教務處得到全校學生的平均成績 70分; 母體的標準差: 2.5
# H0: 交換生的成績和全校平均成績相同。
# Ha: 不同鄉。
import numpy as np
from scipy import stats
import math

population_mean = 70
sample_size = 100
sample_mean = 71.5
print('樣本平均:', sample_mean)
sigma = 2.5
z_obtained = (sample_mean - population_mean)/(sigma/math.sqrt(sample_size))
print('Z 檢定統計量: ', z_obtained) #-> =6, 表示 71.5 離假設母體平均數 70 有 6 個標準差之遠, 故沒有落在信賴區間內
z_critical = stats.norm.ppf(q= 0.975)
print('Z 分數: ', z_critical)

#範例 2 (自由練習):
#披薩店希望各種披薩的銷售量相同, 能夠方便備料 (30份)
#蔬菜 20 地中海 16, 總匯 34, 夏威夷 40, 海鮮 38, 燻雞 32
#H0: 披薩的銷售量與期望銷售量相同
#Ha:不一致
observed = np.array([20, 16, 34, 40, 38, 32])
expected = np.array([30,30,30,30, 30, 30])
df = len(observed) - 1
print('自由度:', df)
chi_squared_stat = (((observed-expected)**2)/expected).sum()
print('卡方檢定統計量:', chi_squared_stat)
chi_squared, p_value = stats.chisquare(f_obs=observed, f_exp=expected)
print(chi_squared, p_value)
crit = stats.chi2.ppf(q = 0.95, df=df)
print('臨界區: ', crit)

#練習5分鐘, 至9:25

#範例 3
#學生每日使用手機時間與學習分數有相關
#使用小時:
hours_phone_used = [0,0,0,1, 1.3, 1.5, 2, 2.2, 2.6, 3.2, 4.1, 4.4, 5]
score = [87, 89, 91, 90, 82, 80, 78, 81, 76, 85, 80, 73, 72]

df = pd.DataFrame({'手機使用時間 (小時)': hours_phone_used, '分數':score})
print(df)
df.plot(kind='scatter', x='手機使用時間 (小時)', y='分數')
plt.title('Mobile Phone and Learning')
plt.show()
#1.統計方式:平均值, 看變異的程度
#2.相關係數

