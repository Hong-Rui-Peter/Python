# -*- coding: utf-8 -*-
"""Untitled209.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qhhW6hSIAqslqOdvX0vMumtACdDqqgES
"""

import pandas as pd
df = pd.read_csv('SeoulBikeData.csv', encoding='gbk', index_col='Date')
data = df.copy()

#Functioning Day -> 'Yes'
data = data[data['Functioning Day'] == 'Yes']

data.pop('Functioning Day')

data = data.dropna()

data = data.rename(columns={'Temperature(癈)':'Temp(C)', 'Dew point temperature(癈)':'DP Temp'})

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
data['Seasons'] = le.fit_transform(data['Seasons'])

data['Holiday'] = le.fit_transform(data['Holiday'])

target = data.pop('Rented Bike Count')

target

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
data_train, data_test, target_train, target_test = train_test_split(data.values, target.values, test_size=0.2)

print(data_train.shape)
print(target_train.shape)
print(data_test.shape)

regr = LinearRegression()
regr.fit(data_train, target_train)

ph = regr.predict(data_test)

print(regr.score(data_train, target_train).round(2))
print(regr.score(data_test, target_test).round(2))

from sklearn.metrics import mean_absolute_error
print(mean_absolute_error(target_test, ph).round(2))

KNN (K-nearest neighbors)