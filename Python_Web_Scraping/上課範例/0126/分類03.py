# -*- coding: utf-8 -*-
"""分類03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jw_nwpkux4D6B6Z7um75hbT81hOLwmPL
"""

#決策樹: 樹 (tree)
#根節點 root
#子節點 children
#  葉節點 (leaf)

import pandas as pd
from sklearn import preprocessing, tree
from sklearn.model_selection import train_test_split
titanic = pd.read_csv('titanic.csv')

titanic.head() #3分鐘練習, 8:58
label_encoder = preprocessing.LabelEncoder()
encoded_class = label_encoder.fit_transform(titanic['PClass'])

titanic.head()
X = pd.DataFrame([titanic['SexCode'], encoded_class]).T
X.columns = ['SexCode', 'PClass'] #指定新 DataFrame 的兩個欄位名稱
y = titanic['Survived']

XTrain, XTest, yTrain, yTest = train_test_split(X, y, test_size=0.25, random_state=1)
#3分鐘練習, 9:11

dtree = tree.DecisionTreeClassifier()
dtree.fit(XTrain, yTrain)

print('訓練的準確率分數: ', dtree.score(XTrain, yTrain).round(3))
print('測試的準確率分數: ', dtree.score(XTest, yTest).round(3))
#3分鐘練習, 9:18

XTest

#預測機率的交叉分析表
preds = dtree.predict_proba(X=XTest)
print(pd.crosstab(preds[:,0], columns=[XTest['PClass'], XTest['SexCode']]))
#3分鐘練習, 9:35

#分類: 1. KNN 最近鄰居; 2 羅吉斯迴歸 (迭代增加, 正規化); 3. 決策樹
#資料分析模型: A. 相關、預測 (迴歸); B. 分類
#類神經網路 NN